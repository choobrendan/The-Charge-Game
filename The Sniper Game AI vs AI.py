# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sEJ8Bw5qLM6h_0ltqdSqSD_AJzW4cHw_
"""

import random

class Player:
    def __init__(self):
        self.reset()

    def reset(self):
        self.bullets = 0
        self.is_alive = True
        self.current_block = None
        self.current_shoot = None
        self.shooter = {1: "Gun", 2: "Double Gun", 3: "Headshot", 4: "Bazooka", 5: "RasenGun", 6: "Double Bazooka"}
        self.blocker = {1: "Shield", 2: "Double Shield", 3: "Head Shield", 4: "Barricade", 5: "RasenGun Catcher", 6: "Epic Barricade"}
        self.shooted = False
        self.blocked = False
        self.charged = False
        self.opponent_bullets=0

    def set_bullets(self, num_bullets):
        self.bullets = num_bullets
    def set_opponent_bullets(self, opp_bullets):
        self.opponent_bullets = opp_bullets

    def set_alive(self, alive_status):
        self.is_alive = alive_status

    def check_alive(self):
        return self.is_alive

    def set_shoot(self, shoot_option):
        self.current_shoot = shoot_option
        self.shooted = True

    def get_shoot(self):
        return self.current_shoot

    def set_block(self, block_option):
        self.current_block = block_option
        self.blocked = True

    def get_block(self):
        return self.current_block

    def get_bullets(self):
        return self.bullets

    def get_opponent_bullets(self):
        return self.opponent_bullets

    def is_alive(self):
        return self.is_alive

    def has_shooted(self):
        return self.shooted

    def has_blocked(self):
        return self.blocked

    def has_charged(self):
        return self.charged

def is_death(u_shoot, u_block, t_shoot, t_block, u_charged, t_charged):
    death = False

    if u_block and t_shoot:
        if u_block != t_shoot:
            death = True
    elif u_shoot and t_shoot:
        if u_shoot < t_shoot:
            death = True
    elif u_charged and t_shoot:
        death = True

    return death

def ai_choice(player, opponent_bullets):
    if player.get_bullets() ==0 and player.get_opponent_bullets()==0:
          return "r", None
    if player.get_bullets() ==0:
      choice = random.choice(['b', 'r'])
      if choice == 'b':
        muchb = random.randint(1, player.get_opponent_bullets())
        return choice, muchb
      else:
          return choice, None
    elif player.get_opponent_bullets()==0:
      choice = random.choice(['s', 'r'])
      if choice == 's' and player.get_bullets() >= 1:
        muchs = random.randint(1, player.get_bullets())
        return choice, muchs
      else:
          return choice, None
    else:
      choice = random.choice(['s', 'b', 'r'])
      if choice == 's' and player.get_bullets() >= 1:
          muchs = random.randint(1, player.get_bullets())
          return choice, muchs

      elif choice == 'b'and player.get_opponent_bullets() >= 1:
          muchb = random.randint(1, player.get_opponent_bullets())
          return choice, muchb
      else:
          return choice, None


def main():
    player1wins = 0
    pcwins = 0

    for _ in range(1000):
        player1 = Player()
        pc = Player()
        turn_count = 1

        while player1.is_alive and pc.is_alive:
            logic = False

            if turn_count == 1:
                print("Let's watch two AIs play against each other!")
                print("\nTurn 1!")
                print("Both of them charged.\n")
                player1.set_bullets(1)
                pc.set_bullets(1)
            else:
                while not logic:
                    print(f"Player 1 bullets: {player1.get_bullets()}")
                    print(f"PC bullets: {pc.get_bullets()}\n")

                    choice, amount = ai_choice(player1, player1.get_bullets())
                    if choice == 's':
                        if amount:
                            player1.set_shoot(amount)
                            player1.set_bullets(player1.get_bullets() - amount)
                            print(f"Player 1 pulled out a {player1.get_shoot()} and", end=" ")
                        else:
                            continue
                    elif choice == 'b':
                        player1.set_block(amount)
                        print(f"Player 1 blocked with a {player1.get_block()} and", end=" ")
                    elif choice == 'r':
                        player1.set_bullets(player1.get_bullets() + 1)
                        player1.charged = True
                        player1.set_opponent_bullets(pc.get_bullets())
                        print("Player 1 charged and", end=" ")

                    choice, amount = ai_choice(pc, pc.get_bullets())
                    if choice == 's':
                        if amount:
                            pc.set_shoot(amount)
                            pc.set_bullets(pc.get_bullets() - amount)
                            print(f"the CPU pulled out a {pc.get_shoot()}!")
                            pc.shooted = True
                    elif choice == 'b':
                        pc.set_block(amount)
                        print(f"the CPU blocked with a {pc.get_block()}!")
                        pc.blocked = True
                    elif choice == 'r':
                        pc.set_bullets(pc.get_bullets() + 1)
                        pc.charged = True
                        pc.set_opponent_bullets(player1.get_bullets())
                        print("the CPU charged.")

                    logic = True

                if is_death(player1.has_shooted(), player1.has_blocked(), pc.get_shoot(), pc.get_block(), player1.has_charged(), pc.has_charged()):
                    player1.set_alive(False)
                if is_death(pc.has_shooted(), pc.has_blocked(), player1.get_shoot(), player1.get_block(), pc.has_charged(), player1.has_charged()):
                    pc.set_alive(False)

            if not player1.is_alive:
                print("PC AI won!")
                pcwins = pcwins + 1
                break
            elif not pc.is_alive:
                print("Player 1 won!")
                player1wins = player1wins + 1
                break
            turn_count += 1

    print("Player 1 wins:", player1wins)
    print("PC AI wins:", pcwins)

if __name__ == "__main__":
    main()

